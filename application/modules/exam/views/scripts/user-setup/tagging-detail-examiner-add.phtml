<style>
	.ui-button { margin-left: -1px; }
	.ui-button-icon-only .ui-button-text { padding: 0px; } 
	.ui-autocomplete-input { margin: 0; padding: 0; }
	.ui-menu-item{
		list-style: none;
		margin: 0px;
		padding: 0px;
		border-bottom: 1px solid #CCC;
		background-color: #EEE;
		width: 100%;
	}
	
	.ui-menu-item:hover,.ui-menu-item a:hover{
		background-color: #CCC;
	}
	.btn_pop{
		line-height: 0;
		padding: 0;
		margin:0;
		position: absolute;	
	}
	ul.ui-autocomplete{
		width: 300px;
		margin:0;
		padding: 0;	
	}
	</style>
<script>
	(function( $ ) {
		$.widget( "ui.combobox", {
			_create: function() {
				var self = this,
					select = this.element.hide(),
					selected = select.children( ":selected" ),
					value = selected.val() ? selected.text() : "";
				var input = this.input = $( "<input>" )
					.insertAfter( select )
					.val( value )
					.autocomplete({
						delay: 0,
						minLength: 0,
						source: function( request, response ) {
							var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
							response( select.children( "option" ).map(function() {
								var text = $( this ).text();
								if ( this.value && ( !request.term || matcher.test(text) ) )
									return {
										label: text.replace(
											new RegExp(
												"(?![^&;]+;)(?!<[^<>]*)(" +
												$.ui.autocomplete.escapeRegex(request.term) +
												")(?![^<>]*>)(?![^&;]+;)", "gi"
											), "<strong>$1</strong>" ),
										value: text,
										option: this
									};
							}) );
						},
						select: function( event, ui ) {
							ui.item.option.selected = true;
							self._trigger( "selected", event, {
								item: ui.item.option
							});
						},
						change: function( event, ui ) {
							if ( !ui.item ) {
								var matcher = new RegExp( "^" + $.ui.autocomplete.escapeRegex( $(this).val() ) + "$", "i" ),
									valid = false;
								select.children( "option" ).each(function() {
									if ( $( this ).text().match( matcher ) ) {
										this.selected = valid = true;
										return false;
									}
								});
								if ( !valid ) {
									// remove invalid value, as it didn't match anything
									$( this ).val( "" );
									select.val( "" );
									input.data( "autocomplete" ).term = "";
									return false;
								}
							}
						}
					})
					.addClass( "ui-widget ui-widget-content ui-corner-left" );

				input.data( "autocomplete" )._renderItem = function( ul, item ) {
					return $( "<li></li>" )
						.data( "item.autocomplete", item )
						.append( "<a>" + item.label + "</a>" )
						.appendTo( ul );
				};

				this.button = $( "<button type='button' class='btn_pop'>&nbsp;</button>" )
					.attr( "tabIndex", -1 )
					.attr( "title", "Show All Items" )
					.insertAfter( input )
					.button({
						icons: {
							primary: "ui-icon-triangle-1-s"
						},
						text: false
					})
					.click(function() {
						// close if already visible
						if ( input.autocomplete( "widget" ).is( ":visible" ) ) {
							input.autocomplete( "close" );
							return;
						}

						// work around a bug (likely same cause as #5265)
						$( this ).blur();

						// pass empty string as value to search for, displaying all results
						input.autocomplete( "search", "" );
						input.focus();
					});
			},

			destroy: function() {
				this.input.remove();
				this.button.remove();
				this.element.show();
				$.Widget.prototype.destroy.call( this );
			}
		});
	})( jQuery );

	$(function() {
		//$( "#course_id" ).combobox();
		/*$( "#toggle" ).click(function() {
			$( "#course_id" ).toggle();
		});*/

		$('#course_id').change(function() {
			$.ajax({
		    	url: "<?php echo $this->url(array('module'=>'exam','controller'=>'user-setup', 'action'=>'ajax-get-component'),'default',true);?>",
		      	type: "POST",
		      	data: {cid : $('#course_id').val()},
		      	dataType: "json",
		      	async:false,
		      	success: function(data, status){
		      		$("#component_id option:gt(0)").remove();

		      		if(data!=""){
		      			$("#component_id").append('<option value="0">All Component</option>');
		      		}else{
						alert('<?php echo $this->translate("No Component Setup"); ?>');
		      		}
		      		
		      		$.each(data, function(i,item){
		               $("#component_id").append('<option value="'+item.component_id+'">'+item.component_name+'</option>');
		        	});
		      	}
		   });
		});
	});
	</script>
	
<?php 
	$this->form->setAction($this->url());
	echo  $this->form;
?>